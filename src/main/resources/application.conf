# 
# When launching the cluster, it would 
# run on the localhost or a valid IPv4/v6 address
# and the default port number would be `2551`.
# 
# Recommended way to override that behavior is to 
# override the following environment variables
# - DL_CLUSTER_NAME
# - DL_CLUSTER_PORT
# - DL_CLUSTER_SEED_NODE
# - IS_SEED
# - DL_HTTP_ADDRESS
# - DL_HTTP_PORT
#

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters-during-shutdown = off
  log-level = "DEBUG"

  actor {
    provider = cluster
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      # docker only: `hostname` and `port` ref. external hostname/port.
      hostname = "localhost"
      port = 2551

      # docker only: `bind-hostname` and `bind-port` ref. internal hostname/port.
      # bind-hostname = "localhost"
      # bind-port = 2551
    }
  }

  # NOTE: auto-down is not to be used in production
  #       but auto-down is enabled during development/uat stages.
  # auto-down-unreachable-after = 10s

  # Deep Labs uses pre-defined dispatcher for 
  # regular cluster stuff
  akka.cluster.user-dispatcher = huff-dispatcher

  huff-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-max = 4
    }
  }

  # Deep Labs dispatcher for handling 
  # all incoming http/s requests
  huff-http-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-max = 4
    }
  }

  # Deep Labs dispatcher for handling blocking-IO
  huff-blocking-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      thread-pool-size = 32
    }
    # number of messages each actor would receive before jumping to next actor
    # `1` means its as fair as possible
    throughput = 1
  }
}

# Disable legacy metrics in akka-cluster.

akka.cluster.metrics.enabled=off

# Enable metrics extension in akka-cluster-metrics.

akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.

akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

#
# Each akka.http server delivers with its own configuration file 
# namely known as `application.conf` and what is done here is to 
# override the defaults with ours.
#
# @see http://doc.akka.io/docs/akka-http/current/scala/http/configuration.html
# 
akka.http {
  server {
    server-header = deeplabs-huff/${akka.http.version}
  }
}

# 
# Huff cluster actors configuration
# The `heartbeat` section controls the 
# initial-delay of the logging, and the interval 
# decides how frequent the message is going to be 
# output onto the logs
#
huff {
  heartbeat {
    settings {
      initialdelay = 0 ms
      interval = 1000 ms
    }
    message  : {
      "server_ip"     : ${?DL_CLUSTER_ADDRESS}
      "initial_delay" : ${huff.heartbeat.settings.initialdelay}
      "interval"      : ${huff.heartbeat.settings.interval}
    }
  }
}
